package fel.cvut.af.model.validator;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import fel.cvut.af.model.input.Input;

import javax.persistence.*;

/**
 * An abstract predecessor for client side validators.
 * <p>
 * This class is serialized and client app will render it as a validator with possible error message display.
 * <p>
 * Client side validation and server side validation may differ.
 * You need to manually
 *
 * @param <T> type of value for validation purpose, f.e. Integer for maxlength="5" validator means max length of string is 5
 */
@Entity
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,
        property = "id")
@Inheritance(strategy = InheritanceType.JOINED)
@DiscriminatorColumn(name = "VALIDATOR_TYPE")
public abstract class Validator<T> {

    /**
     * The unique id generated by JPA provider
     */
    @Id
    @GeneratedValue
    private Long id;

    /**
     * An optional message to be displayed if validation fails.
     */
    private String message;

    /**
     * The input this validator is member of.
     */
    @ManyToOne(optional = true, fetch = FetchType.EAGER)
    @JoinColumn(name="input_id")
    @JsonIgnore
    public Input input;

    /**
     *
     * @param message is content for displaying error message
     */
    public Validator(String message) {
        this.message = message;
    }


    public Validator() {};

    /**
     *
     * @return the parameter for validator
     */
    public abstract T getValue();

    /**
     *
     * @param value the parameter for validator, can be null
     */
    public abstract void setValue(T value);

    /**
     *
     * @return the input this validator is member of
     */
    public Input getInput() {
        return input;
    }

    /**
     *
     * @param input this validator is member of, can be null
     */
    public void setInput(Input input) {
        this.input = input;
    }

    /**
     *
     * @return the unique id
     */
    public Long getId() {
        return id;
    }

    /**
     *
     * @param id the unique attribute
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     *
     * @return the name of validator
     */
    public abstract String getName();

    /**
     *
     * @return the error message displayed when validation fails
     */
    public String getMessage() {
        return message;
    }

    /**
     *
     * @param message is displayed when validation fails
     */
    public void setMessage(String message) {
        this.message = message;
    }
}
