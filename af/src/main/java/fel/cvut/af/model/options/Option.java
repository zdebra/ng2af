package fel.cvut.af.model.options;

import com.fasterxml.jackson.annotation.*;
import fel.cvut.af.model.input.Input;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.Arrays;
import java.util.List;

/**
 * An abstract predecessor for Option values defining all common attributes.
 * <p>
 * This class is product of Data Transfer Object pattern (DTO).
 * It encapsulates data that are about to be serialized as options for Selectboxes similar elements.
 *
 * @param <T> the type of value, should be type that can be serialized as a JSON type
 */
@Entity
@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)
@DiscriminatorColumn(name = "OPTION_TYPE")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,
        property = "name", scope = Option.class)
@JsonTypeInfo(use=JsonTypeInfo.Id.NAME, include=JsonTypeInfo.As.PROPERTY, property="@class")
@JsonSubTypes({
        @JsonSubTypes.Type(value = EntityOption.class, name="entity"),
        @JsonSubTypes.Type(value = NumberOption.class, name="number"),
        @JsonSubTypes.Type(value = BooleanOption.class, name="boolean"),
        @JsonSubTypes.Type(value = StringOption.class, name="string")
})
public abstract class Option<T> {

    /**
     * The unique id generated by JPA provider
     */
    @GeneratedValue
    @Id
    @JsonIgnore
    @Column(name="option_id")
    private Long id;

    /**
     * The name of option, should be unique in scope of option list, not null, not empty
     */
    @NotNull
    @NotEmpty
    private String name;

    /**
     * The label of option in human readable form, not null, not empty
     */
    @NotNull
    @NotEmpty
    private String label;

    /**
     * The input this option is member of as an option
     */
    @ManyToOne(optional = true, fetch = FetchType.EAGER,cascade = CascadeType.ALL)
    @JoinColumn(name="input_id")
    @JsonIgnore
    private Input input;

    /**
     * The input this option is member of as an default value
     */
    @ManyToOne(optional = true, fetch = FetchType.EAGER,cascade = CascadeType.ALL)
    @JoinColumn(name="input_def_id")
    @JsonIgnore
    private Input inputDefault;

    public Option() {}

    /**
     *
     * @param label in human readable form, not null, not empty
     * @param name should be unique in scope of option list, not null, not empty
     */
    public Option(String label, String name) {
        this.label = label;
        this.name = name;
    }

    /**
     *
     * @return the name of option
     */
    public String getName() {
        return name;
    }

    /**
     *
     * @param name should be unique in scope of option list, not null, not empty
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     *
     * @return the unique id
     */
    public Long getId() {
        return id;
    }

    /**
     *
     * @param id the unique id
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     *
     * @return the label of option
     */
    public String getLabel() {
        return label;
    }

    /**
     *
     * @param label in human readable form
     */
    public void setLabel(String label) {
        this.label = label;
    }

    /**
     *
     * @return the value of this option
     */
    public abstract T getValue();

    /**
     *
     * @param value should be unique in scope of input
     */
    public abstract void setValue(T value);

    /**
     * Creates list from provided Varargs.
     *
     * @param options multiple option instances
     * @return list of options
     */
    public static List<Option> createOptions(Option... options) {
        return Arrays.asList(options);
    }

    /**
     *
     * @return the input this option is member of as an option
     */
    public Input getInput() {
        return input;
    }

    /**
     *
     * @param input this option is member of as an option, can be null
     */
    public void setInput(Input input) {
        this.input = input;
    }

    /**
     *
     * @return the input this option is member of as a default value
     */
    public Input getInputDefault() {
        return inputDefault;
    }

    /**
     *
     * @param inputDefault this option is member of as a default value, can be null
     */
    public void setInputDefault(Input inputDefault) {
        this.inputDefault = inputDefault;
    }
}
